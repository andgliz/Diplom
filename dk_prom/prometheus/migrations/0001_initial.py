# Generated by Django 4.2.13 on 2024-06-07 14:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Категория')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FirstLessons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('number', models.CharField(max_length=11, validators=[django.core.validators.MinLengthValidator(11)], verbose_name='Номер телефона')),
                ('group', models.CharField(choices=[(1, 'Ассорти'), (2, 'Радость'), (3, 'Родничок'), (4, 'Наш дом'), (5, '220 Вольт'), (6, 'Виват')], verbose_name='Выберите коллектив')),
            ],
            options={
                'verbose_name': 'Запись в коллектив',
                'verbose_name_plural': 'Записи в коллектив',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Spaces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Место')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('capacity', models.IntegerField(verbose_name='Количество мест')),
            ],
            options={
                'verbose_name': 'Пространство',
                'verbose_name_plural': 'Пространства',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название события')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('description', models.CharField(verbose_name='Описание события')),
                ('image', models.ImageField(upload_to='photos/%Y/%m/%d/', verbose_name='Обложка')),
                ('data', models.DateField(verbose_name='Дата')),
                ('time', models.TimeField(verbose_name='Время')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Цена')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='prometheus.categories', verbose_name='Категория')),
                ('space', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='prometheus.spaces', verbose_name='Место')),
            ],
            options={
                'verbose_name': 'Афиша',
                'verbose_name_plural': 'Афиша',
                'ordering': ['data'],
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seats_reserved', models.IntegerField(verbose_name='Количество забронированных мест')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='Время бронирования')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='prometheus.events')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
